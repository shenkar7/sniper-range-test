{"version":3,"sources":["containers/RangeTest/TargetSwitcher/Scope/Scope.module.css","components/UI/Button/Button.module.css","containers/RangeTest/TargetSwitcher/TargetSwitcher.module.css","containers/RangeTest/TargetSwitcher/RangeSlider/RangeSlider.module.css","containers/RangeTest/TargetSwitcher/Scope/ScopeVision/ScopeVision.module.css","components/TestTable/TestTable.module.css","components/Home/Home.module.css","components/UI/Input/Input.module.css","containers/Stats/TestBlock/TestBlock.module.css","App.module.css","containers/RangeTest/TargetSwitcher/Scope/ZoomSlider/ZoomSlider.module.css","components/UI/Spinner/Spinner.module.css","containers/RangeTest/RangeTest.module.css","components/UI/Button/Button.js","components/Countdown/Countdown.js","utility/constants.js","containers/RangeTest/TargetSwitcher/RangeSlider/RangeSlider.js","media/images/field0d.jpg","media/images/field0n.jpg","media/images/field0t.jpg","media/images/field1d.jpg","media/images/field1n.jpg","media/images/field1t.jpg","media/images/field2d.jpg","media/images/field2n.jpg","media/images/field2t.jpg","media/images/reticles/mil_dot.png","media/images/reticles/tmr.png","media/images/reticles/tremor2.png","containers/RangeTest/TargetSwitcher/Scope/ScopeVision/ScopeVision.js","containers/RangeTest/TargetSwitcher/Scope/ZoomSlider/ZoomSlider.js","containers/RangeTest/TargetSwitcher/Scope/Scope.js","utility/axios.js","utility/utility.js","components/TestTable/TestTable.js","components/TestStats/TestStats.js","authContext/authContext.js","components/UI/Spinner/Spinner.js","containers/RangeTest/TargetSwitcher/TestEnd/TestEnd.js","containers/RangeTest/TargetSwitcher/TargetSwitcher.js","containers/RangeTest/RangeTest.js","components/UI/Input/Input.js","components/Form/Form.js","containers/Signup/Signup.js","containers/Login/Login.js","components/Home/Home.js","containers/Stats/TestBlock/TestBlock.js","containers/Stats/Stats.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Button","props","className","classes","onClick","clicked","children","ButtonLink","link","to","replace","action","ButtonSmallLink","smallLink","click","Countdown","React","memo","useState","time","timeLeft","setTimeLeft","stop","setStop","useEffect","countdownEnd","timer","setInterval","prevTimeLeft","clearInterval","text","RANGES_STEPS","MIN_RANGE","MAX_RANGE","RangeSlider","rangeValue","type","min","c","max","value","step","onChange","event","target","onChangeHandler","ticks","tick","ScopeVision","reticle","fields","field0d","field0n","field0t","field1d","field1n","field1t","field2d","field2n","field2t","ZOOM_CONSTANT","style","height","zoom","width","mildot","tmr","tremor2","upperRange","range","rangeFieldRatio","fieldStyle","view","field","src","alt","black","ZoomSlider","isMobile","useMediaQuery","query","p","onZoomChangeHandler","Scope","setZoom","onReticleChangesHandler","reticleInput","singleInput","id","name","checked","htmlFor","sides","mobileAdj","instance","axios","create","baseURL","calculateScore","ranges","guesses","length","score","i","Math","abs","round","filterRangesByVision","vision","finalRanges","substring","push","TestTable","renderHeader","start","end","headerContent","map","key","index","renderRanges","rangesContent","renderVisions","visionsContent","renderGuessed","guessedContent","guessedRanges","diff","good","medium","bad","Table","TestStats","finalScore","dayScore","nightScore","thermalScore","authContext","createContext","state","setState","spinner","loader","TestEnd","useContext","AuthContext","isLoading","setIsLoading","error","setError","content","Spinner","token","date","Date","dateString","toDateString","toTimeString","testData","email","post","then","catch","color","Fragment","resetTest","TargetSwitcher","useRef","setRound","estimatedRange","setEstimatedRange","endEstimate","setEndEstimate","setReticle","endCountdownHandler","useCallback","realRange","endDelay","current","prevRound","countdownTime","RangeTest","defaultLevel","isReady","setIsReady","isCountDown","setIsCountdown","level","setLevel","levels","floor","random","creatingRandomRangesArray","visionArray","creatingRandomFieldsArray","console","log","input","inputClasses","InputElement","Input","label","join","inputOnChangeHandler","Form","set","password","clickHandler","button","Signup","enteredEmail","setEnteredEmail","enteredPassword","setEnteredPassword","isComplete","setIsComplete","isError","setIsError","authData","returnSecureToken","response","Login","errorMessage","setErrorMessage","loginHandler","expirationDate","getTime","data","expiresIn","localStorage","setItem","idToken","localId","userId","message","Home","homeText","guestText","mailPassText","logout","Menu","TestBlock","isOpen","setIsOpen","TableTop","prevIsOpen","Stats","tests","setTests","avgScore","setAvgScore","visionsScore","setVisionsScore","queryParams","get","res","testsArray","day","night","thermal","sum","reverse","err","testsTables","test","App","getItem","authState","setAuthState","removeItem","home","routes","path","exact","component","stats","render","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"kFACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,YAAc,2BAA2B,MAAQ,qBAAqB,aAAe,4BAA4B,UAAY,yBAAyB,YAAc,6B,mBCAnND,EAAOC,QAAU,CAAC,OAAS,uBAAuB,WAAa,2BAA2B,UAAY,4B,mBCAtGD,EAAOC,QAAU,CAAC,eAAiB,uCAAuC,MAAQ,8BAA8B,SAAW,iCAAiC,UAAY,oC,mBCAxKD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,2BAA2B,KAAO,4B,mBCA3GD,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,2BAA2B,KAAO,0BAA0B,QAAU,6BAA6B,MAAQ,6B,mBCApLD,EAAOC,QAAU,CAAC,MAAQ,yBAAyB,KAAO,wBAAwB,OAAS,0BAA0B,IAAM,yB,mBCA3HD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,SAAW,uBAAuB,UAAY,wBAAwB,aAAe,6B,mBCAjID,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,aAAe,8B,mBCA9DD,EAAOC,QAAU,CAAC,SAAW,4BAA4B,MAAQ,2B,mBCAjED,EAAOC,QAAU,CAAC,IAAM,mB,mBCAxBD,EAAOC,QAAU,CAAC,WAAa,iC,mBCA/BD,EAAOC,QAAU,CAAC,OAAS,wBAAwB,MAAQ,yB,mBCA3DD,EAAOC,QAAU,CAAC,OAAS,4B,wKCEdC,EAAS,SAAAC,GAElB,OACI,qBAAKC,UAAWC,IAAQH,OAAxB,SACI,wBAAQI,QAASH,EAAMI,QAAvB,SAAiCJ,EAAMK,cAKtCC,EAAa,SAAAN,GACtB,IAAIO,EAAO,KAMX,OALGP,EAAMQ,GACLD,EAAO,cAAC,IAAD,CAAMN,UAAWC,IAAQI,WAAYE,GAAIR,EAAMQ,GAAIC,SAAUT,EAAMS,QAAnE,SAA6ET,EAAMK,WACtFL,EAAMU,SACVH,EAAO,sBAAMN,UAAWC,IAAQI,WAAYH,QAASH,EAAMU,OAApD,SAA6DV,EAAMK,YAEvE,8BAAME,KAGJI,EAAkB,SAAAX,GAS3B,OAPGA,EAAMQ,GACE,cAAC,IAAD,CAAMP,UAAWC,IAAQU,UAAWJ,GAAIR,EAAMQ,GAA9C,SAAmDR,EAAMK,WAGzD,sBAAMJ,UAAWC,IAAQU,UAAWT,QAASH,EAAMa,MAAnD,SAA2Db,EAAMK,YCGjES,EA5BGC,IAAMC,MAAK,SAAAhB,GAAU,IAAD,EAEFiB,mBAASjB,EAAMkB,MAFb,mBAE3BC,EAF2B,KAEjBC,EAFiB,OAGVH,oBAAS,GAHC,mBAG3BI,EAH2B,KAGrBC,EAHqB,KAqBlC,OAhBAC,qBAAU,WAEHF,EACCrB,EAAMwB,eAEFL,GAAY,GAChBG,GAAQ,GAGZ,IAAMG,EAAQC,aAAY,WACtBN,GAAY,SAACO,GAAD,OAAmBA,EAAe,OAC/C,KAEH,OAAO,kBAAMC,cAAcH,MAC5B,CAACN,EAAUE,EAAMrB,IAGhB,8BACI,eAAC,EAAD,CAAQI,QAAS,kBAAMkB,GAAQ,IAA/B,UAAuCtB,EAAM6B,KAA7C,KAAqDV,EAArD,Y,kCCpBCW,EAAe,GACfC,EAAY,IACZC,EAAY,ICeVC,EAnBK,SAACjC,GAMnB,OACE,sBAAKC,UAAWC,IAAQ+B,YAAxB,UACE,+BAAKjC,EAAMkC,WAAX,QACA,uBAAOC,KAAK,QAAQC,IAAKC,EAAaC,IAAKD,EAAaE,MAAOvC,EAAMkC,WAAYM,KAAMH,EAAgBI,SAAW,SAAAC,GAAK,OAPnG,SAACA,GACvB1C,EAAMyC,SAASC,EAAMC,OAAOJ,OAMiGK,CAAgBF,MAC3I,sBAAKzC,UAAWC,IAAQ2C,MAAxB,UACE,sBAAM5C,UAAWC,IAAQ4C,KAAzB,iBACA,sBAAM7C,UAAWC,IAAQ4C,KAAzB,iBACA,sBAAM7C,UAAWC,IAAQ4C,KAAzB,wB,mDCjBO,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,oCCA1B,MAA0B,gCCA1B,MAA0B,oCC0F1BC,EAzEK,SAAA/C,GAEhB,IAmBIgD,EAnBEC,EAAS,CACCC,QAASA,EACTC,QAASA,EACTC,QAASA,EACTC,QAASA,EACTC,QAASA,EACTC,QAASA,EACTC,QAASA,EACTC,QAASA,EACTC,QAASA,GAGnBC,EAAgB,IdbF,GcedC,EAAQ,CACVC,OAAO,GAAD,OAAK7D,EAAM8D,KAAOH,EAAlB,KACNI,MAAM,GAAD,OAAK/D,EAAM8D,KAAOH,EAAlB,MAIT,OAAQ3D,EAAMgD,SACV,IAAK,SACDA,EAAUgB,EACV,MACJ,IAAK,MACDhB,EAAUiB,EACV,MACJ,IAAK,UACDjB,EAAUkB,EACV,MACJ,QACIlB,EAAUgB,EAQlB,IAAIG,EdhD0B,IckD3BnE,EAAMoE,MdlDqB,IcmD1BD,EAAa9B,EACTrC,EAAMoE,OdrDe,McsDzBD,EdtDyB,KcwD7B,IAAME,EAAkB,IAAMF,EAAanE,EAAMoE,MAE3CE,EAAa,CAACP,MAAM,GAAD,OAAKM,EAAL,KAAyBR,OAAO,GAAD,OAAKQ,EAAL,MAExD,OACI,sBAAKpE,UAAWC,IAAQ6C,YAAxB,UAEI,sBAAK9C,UAAWC,IAAQqE,KAAMX,MAAOA,EAArC,UACI,qBAAK3D,UAAWC,IAAQsE,MAAOZ,MAAOU,EAAtC,SACI,cAAC,IAAD,UACI,8BACI,qBAAKG,IAAKxB,EAAOjD,EAAMwE,OAAQE,IAAI,gBAI/C,qBAAKzE,UAAWC,IAAQ8C,QAAxB,SACI,qBAAKyB,IAAKzB,EAAS0B,IAAI,iBAI/B,qBAAKzE,UAAWC,IAAQyE,Y,yBC5DrBC,EApBI,SAAA5E,GAEf,IAAM6E,EAAWC,wBAAc,CAC3BC,MAAO,uBAGPC,EAAI,qCAAKhF,EAAM8D,QAKnB,OAJGe,IACCG,EAAI,oBAAGpB,MAAO,CAAC,KAAO,GAAP,OAAsB,KAAX5D,EAAM8D,KAAY,GAA7B,MAAX,iBAAkD9D,EAAM8D,SAI5D,sBAAK7D,UAAWC,IAAQ0E,WAAxB,UACKI,EACD,uBAAO7C,KAAK,QAAQC,IfDR,GeCyBE,IfAzB,GeA0CC,MAAOvC,EAAM8D,KAAMrB,SAAU,SAAAC,GAAK,OAAI1C,EAAMiF,oBAAoBvC,EAAMC,OAAOJ,UACnI,wBAAQtC,UAAU,eCmDfiF,EAjEDnE,IAAMC,MAAK,SAAAhB,GAAU,IAAD,EAENiB,mBhBSA,IgBXM,mBAEvB6C,EAFuB,KAEjBqB,EAFiB,KAQxBC,EAA0B,SAAA1C,GAC5B1C,EAAMoF,wBAAwB1C,EAAMC,OAAOJ,QAGzC8C,EACF,sBAAKpF,UAAWC,IAAQmF,aAAxB,UACI,sBAAKpF,UAAWC,IAAQoF,YAAxB,UACI,uBAAOnD,KAAK,QACRoD,GAAG,SACHC,KAAK,UACLjD,MAAM,SACNkD,QAA2B,WAAlBzF,EAAMgD,QACfP,SAAU2C,IAEd,uBAAOM,QAAQ,SAAf,wBAEJ,sBAAKzF,UAAWC,IAAQoF,YAAxB,UACI,uBACInD,KAAK,QACLoD,GAAG,MACHC,KAAK,UACLjD,MAAM,MACNkD,QAA2B,QAAlBzF,EAAMgD,QACfP,SAAU2C,IAEd,uBAAOM,QAAQ,MAAf,oBAEJ,sBAAKzF,UAAWC,IAAQoF,YAAxB,UACI,uBACInD,KAAK,QACLoD,GAAG,UACHC,KAAK,UACLjD,MAAM,UACNkD,QAA2B,YAAlBzF,EAAMgD,QACfP,SAAU2C,IAEd,uBAAOM,QAAQ,UAAf,2BAIZ,OACI,sBAAKzF,UAAWC,IAAQgF,MAAxB,UACI,qBAAKjF,UAAWC,IAAQyF,MAAxB,SACKN,IAEL,qBAAKpF,UAAWC,IAAQ6C,YAAxB,SACI,qBAAK9C,UAAWC,IAAQ0F,UAAxB,SACI,cAAC,EAAD,CAAa9B,KAAMA,EAAMM,MAAOpE,EAAMoE,MAAOI,MAAOxE,EAAMwE,MAAOxB,QAAShD,EAAMgD,cAGxF,qBAAK/C,UAAWC,IAAQyF,MAAxB,SACI,cAAC,EAAD,CAAY7B,KAAMA,EAAMmB,oBAvDR,SAAAnB,GACxBqB,EAAQrB,c,iBCLD+B,EAJEC,IAAMC,OAAO,CAC1BC,QAAS,qDCMAC,I,MAAiB,SAACC,EAAQC,GAEnC,GAAqB,IAAlBD,EAAOE,QAAmC,IAAnBD,EAAQC,OAC9B,MAAO,OAMX,IAJA,IACMA,EAASD,EAAQC,OACnBC,EAAQ,EAEJC,EAAI,EAAGA,EAAIF,EAAQE,IAAI,CAE3BD,GADUE,KAAKC,IAAIL,EAAQG,GAAKjE,EAAiB6D,EAAOI,GAAKjE,GAC9C+D,EAKnB,OAFAC,EAAQE,KAAKE,MAAsC,KAA/B,EAAIJ,EATE,OAcjBK,GAAuB,SAACR,EAAQjD,EAAQ0D,GAEjD,IADA,IAAIC,EAAc,GACVN,EAAE,EAAGA,EAAEJ,EAAOE,OAAQE,IACvBrD,EAAOqD,GAAGO,UAAU5D,EAAOqD,GAAGF,OAAS,KAAOO,GAC7CC,EAAYE,KAAKZ,EAAOI,IAEhC,OAAOM,G,oBC6FIG,GA5HG,SAAA/G,GAEd,IAAMgH,EAAe,SAACC,EAAOC,GAEzB,IADA,IAAMC,EAAgB,CAAC,SACfb,EAAEW,EAAOX,EAAIY,EAAKZ,IACtBa,EAAcL,KAAKR,EAAE,GAGzB,OACIa,EAAcC,KAAI,SAACC,EAAKC,GACpB,OAAO,6BAAiBD,GAARC,OAKtBC,EAAe,SAACN,EAAOC,GAEzB,IADA,IAAMM,EAAgB,CAAC,SACflB,EAAEW,EAAOX,EAAIY,EAAKZ,IACtBkB,EAAcV,KAAK9G,EAAMkG,OAAOI,IAGpC,OACIkB,EAAcJ,KAAI,SAACC,EAAKC,GACpB,OAAO,6BAAiBD,GAARC,OAKtBG,EAAgB,SAACR,EAAOC,GAE1B,IADA,IAAMQ,EAAiB,CAAC,UAChBpB,EAAEW,EAAOX,EAAIY,EAAKZ,IAAI,CAE1B,OADoBtG,EAAM2G,OAAOL,GAAGO,UAAU7G,EAAM2G,OAAOL,GAAGF,OAAS,IAEnE,IAAK,IACDsB,EAAeZ,KAAK,OACpB,MACJ,IAAK,IACDY,EAAeZ,KAAK,SACpB,MACJ,IAAK,IACDY,EAAeZ,KAAK,WACpB,MACJ,QACIY,EAAeZ,KAAK,SAIhC,OACIY,EAAeN,KAAI,SAACC,EAAKC,GACrB,OAAO,6BAAiBD,GAARC,OAKtBK,EAAgB,SAACV,EAAOC,GAE1B,IADA,IAAMU,EAAiB,CAAC,iBAChBtB,EAAEW,EAAOX,EAAIY,EAAKZ,IACtBsB,EAAed,KAAK9G,EAAM6H,cAAcvB,IAG5C,OACIsB,EAAeR,KAAI,SAACC,EAAKC,GACrB,KAAGA,EAAQ,GAeP,OAAO,6BAAkBD,GAATC,GAdhB,IAAMQ,EAAOvB,KAAKC,IAAIxG,EAAMkG,OAAOe,EAAQK,EAAM,GAAKtH,EAAM6H,cAAcZ,EAAQK,EAAM,IACxF,QAAQ,GACJ,KAAc,IAATQ,EACD,OAAO,oBAAgB7H,UAAWC,KAAQ6H,KAAnC,SAA0CV,GAAjCC,GACpB,KAAc,KAATQ,EACD,OAAO,oBAAgB7H,UAAWC,KAAQ8H,OAAnC,SAA4CX,GAAnCC,GACpB,KAAKQ,EAAO,GACR,OAAO,oBAAgB7H,UAAWC,KAAQ+H,IAAnC,SAAyCZ,GAAhCC,GACpB,QACI,OAAO,6BAAiBD,GAARC,QAiDxC,OAvCiBxC,wBAAc,CAC3BC,MAAO,uBAOH,wBAAOQ,GAAG,OAAOtF,UAAWC,KAAQgI,MAApC,UACI,gCACI,6BAAKlB,EAAa,EAAG,OAEzB,kCACI,6BAAkBO,EAAa,EAAG,IAA1B,UACR,6BAAmBE,EAAc,EAAG,IAA5B,WACR,6BAAmBE,EAAc,EAAG,IAA5B,WACR,6BAAKX,EAAa,EAAGhH,EAAMkG,OAAOE,UAClC,6BAAmBmB,EAAa,EAAGvH,EAAMkG,OAAOE,SAAxC,WACR,6BAAoBqB,EAAc,EAAGzH,EAAMkG,OAAOE,SAA1C,YACR,6BAAoBuB,EAAc,EAAG3H,EAAMkG,OAAOE,SAA1C,kBAOhB,wBAAOb,GAAG,OAAOtF,UAAWC,KAAQgI,MAApC,UACI,gCACI,6BAAKlB,EAAa,EAAGhH,EAAMkG,OAAOE,YAEtC,kCACI,6BAAkBmB,EAAa,EAAGvH,EAAMkG,OAAOE,SAAvC,UACR,6BAAmBqB,EAAc,EAAGzH,EAAMkG,OAAOE,SAAzC,WACR,6BAAmBuB,EAAc,EAAG3H,EAAMkG,OAAOE,SAAzC,kBCjFb+B,GAjCG,SAAAnI,GAEV,IAAMoI,EAAanC,GAAejG,EAAMkG,OAAQlG,EAAM6H,eAEhDQ,EAAWpC,GACTS,GAAqB1G,EAAMkG,OAAQlG,EAAMiD,OAAQ,KACjDyD,GAAqB1G,EAAM6H,cAAe7H,EAAMiD,OAAQ,MAG1DqF,EAAarC,GACXS,GAAqB1G,EAAMkG,OAAQlG,EAAMiD,OAAQ,KACjDyD,GAAqB1G,EAAM6H,cAAe7H,EAAMiD,OAAQ,MAG1DsF,EAAetC,GACbS,GAAqB1G,EAAMkG,OAAQlG,EAAMiD,OAAQ,KACjDyD,GAAqB1G,EAAM6H,cAAe7H,EAAMiD,OAAQ,MAGhE,OACQ,gCACQ,gDACA,+BAAKmF,EAAL,UACA,gCACQ,4CAAeC,EAAf,OACA,8CAAiBC,EAAjB,OACA,gDAAmBC,EAAnB,UAER,cAAC,GAAD,CAAWrC,OAAQlG,EAAMkG,OAAQS,OAAQ3G,EAAMiD,OAAQ4E,cAAe7H,EAAM6H,oBCzBrFW,GALKzH,IAAM0H,cAAc,CACpCC,MAAO,KACPC,SAAU,O,oBCGCC,GAJC,kBACZ,qBAAK3I,UAAWC,KAAQ2I,UCoDbC,GAjDC,SAAA9I,GAEZ,IAAMwI,EAAcO,qBAAWC,IAFV,EAGa/H,oBAAS,GAHtB,mBAGdgI,EAHc,KAGHC,EAHG,OAIKjI,mBAAS,MAJd,mBAIdkI,EAJc,KAIPC,EAJO,KAMjBC,EAAU,cAACC,GAAD,IAwCd,OAtCA/H,qBAAU,WACN,GAAGiH,EAAYE,MAAMa,MAAM,CACvB,IAAMC,EAAO,IAAIC,KACXC,EAAaF,EAAKG,eAAe9C,UAAU,GAAK,IAAM2C,EAAKI,eAAe/C,UAAU,EAAG,GACvFgD,EAAW,CACbC,MAAOtB,EAAYE,MAAMoB,MACzBN,KAAME,EACNxD,OAAQlG,EAAMkG,OACd2B,cAAe7H,EAAM6H,cACrB5E,OAAQjD,EAAMiD,QAElB6C,EAAMiE,KAAK,oBAAsBvB,EAAYE,MAAMa,MAAOM,GACzDG,MAAK,WACFd,GAAa,MAEhBe,OAAM,WACHb,EAAS,mBAAGxF,MAAO,CAACsG,MAAO,OAAlB,qCACThB,GAAa,WAIjBA,GAAa,KAElB,CAACV,EAAYE,MAAMa,MAAOf,EAAYE,MAAMoB,MAAO9J,EAAMiD,OAAQjD,EAAM6H,cAAe7H,EAAMkG,SAE3F+C,IACAI,EACI,eAAC,IAAMc,SAAP,WACI,cAAC,GAAD,CAAWjE,OAAQlG,EAAMkG,OAAQ2B,cAAe7H,EAAM6H,cAAe5E,OAAQjD,EAAMiD,SAClFkG,EACD,uBACA,cAAC,EAAD,CAAYzI,OAAQV,EAAMoK,UAA1B,mBACA,uBACA,cAAC,EAAD,CAAY5J,GAAG,IAAf,sBAKL6I,GCUIgB,GAvDQ,SAAArK,GAEnB,IAAM6H,EAAgByC,iBAAO,IAFD,EAIFrJ,mBAAS,GAJP,mBAIrBwF,EAJqB,KAId8D,EAJc,OAKgBtJ,mBxBAf,KwBLD,mBAKrBuJ,EALqB,KAKLC,EALK,OAMUxJ,oBAAS,GANnB,mBAMrByJ,EANqB,KAMRC,EANQ,OAOE1J,mBxBAH,UwBPC,mBAOrB+B,EAPqB,KAOZ4H,EAPY,KAatBC,EAAsBC,uBAAY,WACpCH,GAAe,KAChB,IASCtB,EAAUqB,EAEV,eAAC,IAAMP,SAAP,WACI,sBAAKlK,UAAWC,IAAQuG,MAAxB,mBAAsCA,EAAM,EAA5C,IAAgDzG,EAAMkG,OAAOE,UAC7D,qBAAInG,UAAWC,IAAQ6K,UAAvB,UAAmC/K,EAAMkG,OAAOO,GAAhD,QACA,qBAAKxG,UAAWC,IAAQ8K,SAAxB,SAAkC,cAAC,EAAD,CAAW9J,KxBvBrB,EwBuBmDM,aAZ3D,WACpBqG,EAAcoD,QAAQnE,KAAK0D,GAC3BD,GAAS,SAACW,GAAD,OAAgBA,EAAY,KACrCP,GAAe,GACfF,ExBhByB,MwBwBqF5I,KAAK,UAGnH,eAAC,IAAMsI,SAAP,WACI,sBAAKlK,UAAWC,IAAQuG,MAAxB,mBAAsCA,EAAM,EAA5C,IAAgDzG,EAAMkG,OAAOE,UAC7D,cAAC,EAAD,CAAOhC,MAAOpE,EAAMkG,OAAOO,GAAQjC,MAAOxE,EAAMiD,OAAOwD,GAAQzD,QAASA,EAASoC,wBAzBzD,SAAApC,GAC5B4H,EAAW5H,MAyBP,cAAC,EAAD,CAAad,WAAYsI,EAAgB/H,SAAU,SAAA2B,GAAK,OAAIqG,EAAkBrG,MAC9E,cAAC,EAAD,CAAWlD,KAAMlB,EAAMmL,cAAe3J,aAAcqJ,EAAqBhJ,KAAK,gBAYtF,OATG4E,IAAUzG,EAAMkG,OAAOE,SACtBiD,EAAU,cAAC,GAAD,CACEnD,OAAQlG,EAAMkG,OACd2B,cAAeA,EAAcoD,QAC7BhI,OAAQjD,EAAMiD,OACdmH,UAAWpK,EAAMoK,aAK7B,qBAAKnK,UAAWC,IAAQmK,eAAxB,SACKhB,K,oBCoDE+B,GArGG,SAAApL,GAEd,IAEIqL,EAFE7C,EAAcO,qBAAWC,IAI3BqC,EADD7C,EAAYE,MAAMa,MzBZW,cADP,WyBQF,MAUOtI,oBAAS,GAVhB,mBAUhBqK,EAVgB,KAUPC,EAVO,OAWetK,oBAAS,GAXxB,mBAWhBuK,EAXgB,KAWHC,EAXG,OAYGxK,mBAASoK,GAZZ,mBAYhBK,EAZgB,KAYTC,EAZS,KAqBnBtC,EACA,gCACI,wCACCb,EAAYE,MAAMa,MACf,KACA,sBAAKtJ,UAAWC,KAAQ0L,OAAxB,UACI,uBAAOzJ,KAAK,QACRoD,GAAG,WACHC,KAAK,QACLjD,MAAM,WACNkD,QAAmB,aAAViG,EACTjJ,SAAU,SAAAC,GAAK,OAAIiJ,EAASjJ,EAAMC,OAAOJ,UAE7C,wBAAOmD,QAAQ,WAAf,uBzBxCS,GyBwCT,WACA,uBACA,uBAAOvD,KAAK,QACRoD,GAAG,eACHC,KAAK,QACLjD,MAAM,eACNkD,QAAmB,iBAAViG,EACTjJ,SAAU,SAAAC,GAAK,OAAIiJ,EAASjJ,EAAMC,OAAOJ,UAE7C,wBAAOmD,QAAQ,eAAf,2BzBhDa,GyBgDb,WACA,uBACA,uBAAOvD,KAAK,QACRoD,GAAG,cACHC,KAAK,QACLjD,MAAM,cACNkD,QAAmB,gBAAViG,EACTjJ,SAAU,SAAAC,GAAK,OAAIiJ,EAASjJ,EAAMC,OAAOJ,UAE7C,wBAAOmD,QAAQ,cAAf,0BzBxDY,GyBwDZ,cAGR,cAAC,EAAD,CAAQtF,QAAS,kBAAMmL,GAAW,IAAlC,mBACA,uBACA,cAAC,EAAD,CAAY/K,GAAG,IAAf,qBAYR,GARG8K,IACCjC,EACI,gCACI,uBACA,cAAC,EAAD,CAAWnI,KzB/DS,EyB+DqBM,aAAc,kBAAMiK,GAAe,IAAQ5J,KAAK,cAIhG2J,EAAa,CAEd,IAIIL,EAJAjF,EP3C6B,WAGrC,IAFA,IAAMA,EAAS,GAEPI,EAAI,EAAGA,ElBxCa,GkBwCWA,IACnCJ,EAAOY,KAAKP,KAAKsF,MAFK,GAECtF,KAAKuF,UAAgCzJ,EAAiBA,GAEjF,OAAO6D,EOqCU6F,GAET9I,EPnC6B,SAAAiD,GAKrC,IAJA,IAEIS,EAFE1D,EAAS,GACT+I,EAAc,CAAC,IAAK,IAAK,KAGvB1F,EAAI,EAAGA,ElBpDa,GkBoDWA,IACnCK,EAASqF,EAAYzF,KAAKsF,MAAMtF,KAAKuF,SAAWE,EAAY5F,SAEzDF,EAAOI,GlB7CgB,IkB8CtBrD,EAAO6D,KAAP,gBAAqBH,IACjBT,EAAOI,IlBhDU,IkBiDrBrD,EAAO6D,KAAP,gBAAqBH,IAErB1D,EAAO6D,KAAP,gBAAqBH,IAE7B,OAAO1D,EOoBUgJ,CAA0B/F,GAGvC,OAAOwF,GACH,IAAK,WACDP,EzBpFa,GyBqFb,MACJ,IAAK,eACDA,EzBtFiB,GyBuFjB,MACJ,IAAK,cACDA,EzBxFgB,GyByFhB,MACJ,QACIA,EzB7Fa,GyBiGrB9B,EACI,8BACI,cAAC,GAAD,CAAgBnD,OAAQA,EAAQjD,OAAQA,EAAQkI,cAAeA,EAAef,UA/ExE,WACdmB,GAAW,GACXE,GAAe,GACfE,EAASN,GACTa,QAAQC,IAAI,iCAgFhB,OAAQ9C,G,oBCxFG+C,GAjBD,SAAApM,GAEV,IAAMqM,EAAe,CAACnM,KAAQoM,cAE9B,OACI,sBAAKrM,UAAWC,KAAQqM,MAAxB,UACI,uBAAOtM,UAAWC,KAAQsM,MAA1B,SAAkCxM,EAAMwM,QACxC,uBACIvM,UAAWoM,EAAaI,KAAK,KAC7BlK,MAAOvC,EAAMuC,MACbE,SAAUzC,EAAM0M,qBAChBvK,KAAMnC,EAAMmC,WCCbwK,GAVF,SAAA3M,GACT,OACI,gCACI,cAACuM,GAAD,CAAOC,MAAM,SAASjK,MAAOvC,EAAM8J,MAAMvH,MAAOJ,KAAK,QAAQuK,qBAAsB,SAAAhK,GAAK,OAAI1C,EAAM8J,MAAM8C,IAAIlK,EAAMC,OAAOJ,UACzH,cAACgK,GAAD,CAAOC,MAAM,YAAYjK,MAAOvC,EAAM6M,SAAStK,MAAOJ,KAAK,WAAWuK,qBAAsB,SAAAhK,GAAK,OAAI1C,EAAM6M,SAASD,IAAIlK,EAAMC,OAAOJ,UACrI,cAAC,EAAD,CAAQnC,QAASJ,EAAM8M,aAAvB,SAAsC9M,EAAM+M,aC0DzCC,GA7DA,SAAAhN,GAAU,IAAD,EAEoBiB,mBAAS,IAF7B,mBAEbgM,EAFa,KAECC,EAFD,OAG0BjM,mBAAS,IAHnC,mBAGbkM,EAHa,KAGIC,EAHJ,OAIgBnM,oBAAS,GAJzB,mBAIboM,EAJa,KAIDC,EAJC,OAKcrM,oBAAS,GALvB,mBAKbgI,EALa,KAKFC,EALE,OAMUjI,oBAAS,GANnB,mBAMbsM,EANa,KAMJC,EANI,KA6BhBnE,EACA,eAAC,IAAMc,SAAP,WACI,uDACA,cAAC,GAAD,CACI4C,OAAO,UACPD,aA1BU,WAElB,IAAMW,EAAW,CACb3D,MAAOmD,EACPJ,SAAUM,EACVO,mBAAmB,GAGvBxE,GAAa,GAEbpD,IAAMiE,KAAK,wGAAyG0D,GACnHzD,MAAK,SAAA2D,GACFzE,GAAa,GACboE,GAAc,MAEjBrD,OAAM,SAAAd,GACHD,GAAa,GACbsE,GAAW,OAUP1D,MAAO,CAACvH,MAAO0K,EAAcL,IAAKM,GAClCL,SAAU,CAACtK,MAAO4K,EAAiBP,IAAKQ,QAiBpD,OAZGnE,IACCI,EAAU,cAACC,GAAD,KAGX+D,IACChE,EAAW,mDAGZkE,IACClE,EAAU,mBAAGzF,MAAO,CAACsG,MAAO,OAAlB,6DAIV,gCACKb,EACD,cAAC,EAAD,CAAiB7I,GAAG,IAApB,mC,oBCsCGoN,GA9FD,WAAO,IAAD,EAEwB3M,mBAAS,IAFjC,mBAETgM,EAFS,KAEKC,EAFL,OAG8BjM,mBAAS,IAHvC,mBAGTkM,EAHS,KAGQC,EAHR,OAIoBnM,oBAAS,GAJ7B,mBAIToM,EAJS,KAIGC,EAJH,OAKkBrM,oBAAS,GAL3B,mBAKTgI,EALS,KAKEC,EALF,OAMcjI,oBAAS,GANvB,mBAMTsM,EANS,KAMAC,EANA,OAOwBvM,mBAAS,kDAPjC,mBAOT4M,EAPS,KAOKC,EAPL,KASVtF,EAAcO,qBAAWC,IAEA,OAA5BR,EAAYE,MAAMa,OAAkB8D,GACnCC,GAAc,GAEf9E,EAAYE,MAAMa,QAAU8D,GAC3BC,GAAc,GAElB,IAAMS,EAAe,WAEjB,IAAMN,EAAW,CACb3D,MAAOmD,EACPJ,SAAUM,EACVO,mBAAmB,GAGvBxE,GAAa,GAEbpD,IAAMiE,KAAK,oHAAqH0D,GAC/HzD,MAAK,SAAA2D,GACF,IAAMK,EAAiB,IAAIvE,MAAK,IAAIA,MAAOwE,UAAsC,IAA1BN,EAASO,KAAKC,WACrEC,aAAaC,QAAQ,QAASV,EAASO,KAAKI,SAC5CF,aAAaC,QAAQ,iBAAkBL,GACvCI,aAAaC,QAAQ,SAAUV,EAASO,KAAKK,SAC7CH,aAAaC,QAAQ,QAASV,EAASO,KAAKpE,OAC5CtB,EAAYG,SAAS,CACjBY,MAAOoE,EAASO,KAAKI,QACrBE,OAAQb,EAASO,KAAKK,QACtBzE,MAAO6D,EAASO,KAAKpE,QAEzBZ,GAAa,GACbsE,GAAW,GACXF,GAAc,MAEjBrD,OAAM,SAAAd,GACH,IAAMsF,EAAUtF,EAAMwE,SAASO,KAAK/E,MAAMsF,QAC3B,kBAAZA,EACCX,EAAgB,kBACA,qBAAZW,GAA8C,oBAAZA,GACtCX,EAAgB,gCACpB5E,GAAa,GACbsE,GAAW,OAIfnE,EACA,cAAC,IAAMc,SAAP,UACI,cAAC,GAAD,CACI4C,OAAO,SACPD,aAAciB,EACdjE,MAAO,CAACvH,MAAO0K,EAAcL,IAAKM,GAClCL,SAAU,CAACtK,MAAO4K,EAAiBP,IAAKQ,OA2BpD,OAtBGnE,IACCI,EAAU,cAACC,GAAD,KAGX+D,IACChE,EAAU,uCAAUb,EAAYE,MAAMoB,UAGvCyD,IACClE,EACI,eAAC,IAAMc,SAAP,WACI,cAAC,GAAD,CACI4C,OAAO,SACPD,aAAciB,EACdjE,MAAO,CAACvH,MAAO0K,EAAcL,IAAKM,GAClCL,SAAU,CAACtK,MAAO4K,EAAiBP,IAAKQ,KAE5C,mBAAGxJ,MAAO,CAACsG,MAAO,OAAlB,SAA2B2D,QAMnC,8BACKxE,KC5CEqF,GA7CF,SAAA1O,GAET,IAAMwI,EAAcO,qBAAWC,IAwC/B,OArCI,iCACI,mCACI,mDACA,mBAAG/I,UAAWC,KAAQyO,SAAtB,qEACCnG,EAAYE,MAAMa,MACjB,KACA,eAAC,IAAMY,SAAP,WACE,mBAAGlK,UAAWC,KAAQ0O,UAAtB,yDAGA,oBAAG3O,UAAWC,KAAQ2O,aAAtB,+BACsB,uBADtB,+BAQR,cAAC,GAAD,IACCrG,EAAYE,MAAMa,MACjB,cAAC,EAAD,CAAiB1I,MAAOb,EAAM8O,OAA9B,oBACA,cAAC,EAAD,CAAiBtO,GAAG,UAApB,qBAEF,uBACA,qBAAKP,UAAWC,KAAQ6O,KAAxB,SACKvG,EAAYE,MAAMa,MACjB,eAAC,IAAMY,SAAP,WACE,cAAC,EAAD,CAAY3J,GAAG,aAAf,wBACA,uBACA,cAAC,EAAD,CAAYA,GAAG,SAAf,2BAEF,cAAC,EAAD,CAAYA,GAAG,aAAf,8B,4BCJHwO,GAjCG,SAAAhP,GAAU,IAAD,EAEKiB,oBAAS,GAFd,mBAEhBgO,EAFgB,KAERC,EAFQ,KAQjB9G,EAAanC,GAAejG,EAAMkG,OAAQlG,EAAM6H,eAC1C,IAAMsC,SACDnK,EAAMwJ,KAAsBtJ,KAAQmG,MAErD,OACI,eAAC,IAAM8D,SAAP,WACI,8BACI,uBAAO5E,GAAIvF,EAAMwJ,KAAMvJ,UAAWC,KAAQiP,SAAUhP,QAXpC,WACxB+O,GAAU,SAAAE,GAAU,OAAKA,MAUjB,SACI,gCACI,6BACI,+BACKpP,EAAMwJ,KAAK,uBAAMvJ,UAAWC,KAAQmG,MAAzB,UAAiC+B,EAAjC,qBAM3B6G,EACK,cAAC,GAAD,CAAW/I,OAAQlG,EAAMkG,OAAQS,OAAQ3G,EAAMiD,OAAQ4E,cAAe7H,EAAM6H,gBAC5E,SCwEPwH,GA/FD,WAAO,IAAD,EAEkBpO,oBAAS,GAF3B,mBAETgI,EAFS,KAEEC,EAFF,OAGcjI,oBAAS,GAHvB,mBAGTsM,EAHS,KAGAC,EAHA,OAIUvM,mBAAS,MAJnB,mBAITqO,EAJS,KAIFC,EAJE,OAKgBtO,mBAAS,MALzB,mBAKTuO,EALS,KAKCC,EALD,OAMwBxO,mBAAS,MANjC,mBAMTyO,EANS,KAMKC,EANL,KAOVnH,EAAcO,qBAAWC,IAE3BK,EAAU,cAAC,IAAD,CAAU7I,GAAG,MAmD3B,GAjDAe,qBAAU,WAEN,GAAGiH,EAAYE,MAAMa,MAAM,CAEvB,IAAMqG,EAAc,SAAWpH,EAAYE,MAAMa,MAAQ,6BAA+Bf,EAAYE,MAAMoB,MAAQ,IAClHhE,EAAM+J,IAAI,cAAgBD,GACzB5F,MAAK,SAAA8F,GACF,IAAMC,EAAa,GACfC,EAAM,CAAC9J,OAAQ,GAAIC,QAAS,IAC5B8J,EAAQ,CAAC/J,OAAQ,GAAIC,QAAS,IAC9B+J,EAAU,CAAChK,OAAQ,GAAIC,QAAS,IAChCgK,EAAM,EACV,IAAI,IAAI9I,KAAOyI,EAAI5B,KACf6B,EAAWjJ,KAAK,CACZ0C,KAAMsG,EAAI5B,KAAK7G,GAAKmC,KACpBtD,OAAQ4J,EAAI5B,KAAK7G,GAAKnB,OACtBjD,OAAQ6M,EAAI5B,KAAK7G,GAAKpE,OACtB4E,cAAeiI,EAAI5B,KAAK7G,GAAKQ,gBAEjCsI,GAAOlK,GAAe6J,EAAI5B,KAAK7G,GAAKnB,OAAQ4J,EAAI5B,KAAK7G,GAAKQ,eAE1DmI,EAAI9J,OAAJ,uBAAiB8J,EAAI9J,QAArB,aAAgCQ,GAAqBoJ,EAAI5B,KAAK7G,GAAKnB,OAAQ4J,EAAI5B,KAAK7G,GAAKpE,OAAQ,OACjGgN,EAAM/J,OAAN,uBAAmB+J,EAAM/J,QAAzB,aAAoCQ,GAAqBoJ,EAAI5B,KAAK7G,GAAKnB,OAAQ4J,EAAI5B,KAAK7G,GAAKpE,OAAQ,OACrGiN,EAAQhK,OAAR,uBAAqB8J,EAAI9J,QAAzB,aAAoCQ,GAAqBoJ,EAAI5B,KAAK7G,GAAKnB,OAAQ4J,EAAI5B,KAAK7G,GAAKpE,OAAQ,OAErG+M,EAAI7J,QAAJ,uBAAkB6J,EAAI7J,SAAtB,aAAkCO,GAAqBoJ,EAAI5B,KAAK7G,GAAKQ,cAAeiI,EAAI5B,KAAK7G,GAAKpE,OAAQ,OAC1GgN,EAAM9J,QAAN,uBAAoB8J,EAAM9J,SAA1B,aAAsCO,GAAqBoJ,EAAI5B,KAAK7G,GAAKQ,cAAeiI,EAAI5B,KAAK7G,GAAKpE,OAAQ,OAC9GiN,EAAQ/J,QAAR,uBAAsB6J,EAAI7J,SAA1B,aAAsCO,GAAqBoJ,EAAI5B,KAAK7G,GAAKQ,cAAeiI,EAAI5B,KAAK7G,GAAKpE,OAAQ,OAGlH8M,EAAWK,UACXT,EAAgB,CACZK,IAAK/J,GAAe+J,EAAI9J,OAAQ8J,EAAI7J,SACpC8J,MAAOhK,GAAegK,EAAM/J,OAAQ+J,EAAM9J,SAC1C+J,QAASjK,GAAeiK,EAAQhK,OAAQgK,EAAQ/J,WAEpDsJ,EAAYU,EAAIJ,EAAW3J,QAC3BmJ,EAASQ,GACT7G,GAAa,MAGhBe,OAAM,SAAAoG,GACH7C,GAAW,GACXtE,GAAa,SAIvB,CAACV,EAAYE,QAEZF,EAAYE,MAAMa,MACjB,GAAGN,EACCI,EAAU,cAACC,GAAD,SAET,GAAGiE,EACJlE,EAAU,yDACV,CAEA,IAAMiH,EAAchB,EAAMlI,KAAI,SAAAmJ,GAC1B,OAAO,cAAC,GAAD,CAA2B/G,KAAM+G,EAAK/G,KAAMtD,OAAQqK,EAAKrK,OAAQjD,OAAQsN,EAAKtN,OAAQ4E,cAAe0I,EAAK1I,eAA1F0I,EAAK/G,SAGhCH,EACI,eAAC,IAAMc,SAAP,WACI,iDAAoBqF,EAApB,UACA,uBAFJ,iBAGmBE,EAAaM,IAHhC,IAII,uBAJJ,mBAKqBN,EAAaO,MALlC,IAMI,uBANJ,qBAOuBP,EAAaQ,QAPpC,IAQI,uBACA,uBACCI,EACD,uBACA,cAAC,EAAD,CAAY9P,GAAG,IAAf,qBAOhB,OAAO6I,GCxCImH,GApDH,WAAO,IAAD,EAEkBvP,mBAAS,CACzCsI,MAAO6E,aAAaqC,QAAQ,SAC5BjC,OAAQJ,aAAaqC,QAAQ,UAC7B3G,MAAOsE,aAAaqC,QAAQ,WALd,mBAETC,EAFS,KAEEC,EAFF,KAUV7B,EAAS,WACbV,aAAawC,WAAW,SACxBxC,aAAawC,WAAW,kBACxBxC,aAAawC,WAAW,UACxBxC,aAAawC,WAAW,SACxBD,EAAa,CACTpH,MAAO,KACPiF,OAAQ,KACR1E,MAAO,QAIPkE,EAAiB,IAAIvE,KAAM2E,aAAaqC,QAAQ,mBAEnDC,EAAUnH,OAASyE,GAAkB,IAAIvE,MAC1CqF,IAGF,IAAM+B,EAAO,cAAC,GAAD,CAAM/B,OAAQA,IAEvBgC,EACF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,aAAaC,OAAK,EAACC,UAAW7F,KAC1C,cAAC,IAAD,CAAO2F,KAAK,UAAUC,OAAK,EAACC,UAAWjE,KACvC,cAAC,IAAD,CAAO+D,KAAK,SAASC,OAAK,EAACC,UAAWC,KACtC,cAAC,IAAD,CAAOH,KAAK,IAAIC,OAAK,EAACG,OAAQ,kBAAMN,KACpC,cAAC,IAAD,CAAUrQ,GAAG,SAIjB,OACE,cAAC,IAAD,UACE,cAAC,GAAY4Q,SAAb,CAAsB7O,MAAO,CAACmG,MAAOgI,EAAW/H,SAAUgI,GAA1D,SACE,qBAAK1Q,UAAWC,IAAQsQ,IAAxB,SACGM,SCzCIO,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvH,MAAK,YAAkD,IAA/CwH,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASV,OACL,cAAC,GAAD,IACFW,SAASC,eAAe,SAM1BV,O","file":"static/js/main.78ac092a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Scope\":\"Scope_Scope__1NABJ\",\"ScopeVision\":\"Scope_ScopeVision__t4t-v\",\"sides\":\"Scope_sides__2IMZ2\",\"reticleInput\":\"Scope_reticleInput__3YWiK\",\"mobileAdj\":\"Scope_mobileAdj__Z-Ax5\",\"singleInput\":\"Scope_singleInput__bXWI6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1Hty9\",\"ButtonLink\":\"Button_ButtonLink__2hJbH\",\"smallLink\":\"Button_smallLink__4WhGJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TargetSwitcher\":\"TargetSwitcher_TargetSwitcher__addOT\",\"round\":\"TargetSwitcher_round__3m59q\",\"endDelay\":\"TargetSwitcher_endDelay__1eSf4\",\"realRange\":\"TargetSwitcher_realRange__XuSWZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RangeSlider\":\"RangeSlider_RangeSlider__3Rcsj\",\"ticks\":\"RangeSlider_ticks__1ZQ0i\",\"tick\":\"RangeSlider_tick__1ocfD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ScopeVision\":\"ScopeVision_ScopeVision__PNLm5\",\"black\":\"ScopeVision_black__3W98C\",\"view\":\"ScopeVision_view__1d7V0\",\"reticle\":\"ScopeVision_reticle__21ZQG\",\"field\":\"ScopeVision_field__2EX0u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Table\":\"TestTable_Table__1fnSu\",\"good\":\"TestTable_good__3lOB5\",\"medium\":\"TestTable_medium__c8xqp\",\"bad\":\"TestTable_bad__2wBLh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Menu\":\"Home_Menu__1zh-4\",\"homeText\":\"Home_homeText__lN6el\",\"guestText\":\"Home_guestText__1k3OH\",\"mailPassText\":\"Home_mailPassText__2p9On\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Input_label__eEMEv\",\"InputElement\":\"Input_InputElement__2uzrF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TableTop\":\"TestBlock_TableTop__3F4wL\",\"score\":\"TestBlock_score__1W1Zk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2X1Bi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ZoomSlider\":\"ZoomSlider_ZoomSlider__Mevgj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"Spinner_loader__3zltn\",\"load3\":\"Spinner_load3__3OGxS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"levels\":\"RangeTest_levels__2zAhb\"};","import classes from './Button.module.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const Button = props => {\r\n    \r\n    return (\r\n        <div className={classes.Button}>\r\n            <button onClick={props.clicked}>{props.children}</button>\r\n        </div>\r\n    );    \r\n}\r\n\r\nexport const ButtonLink = props => {\r\n    let link = null;\r\n    if(props.to)\r\n        link = <Link className={classes.ButtonLink} to={props.to} replace={!props.replace}>{props.children}</Link>;\r\n    else if(props.action)\r\n        link = <span className={classes.ButtonLink} onClick={props.action}>{props.children}</span>;\r\n\r\n    return <div>{link}</div>;\r\n}\r\n\r\nexport const ButtonSmallLink = props => {\r\n    let link;\r\n    if(props.to){\r\n        link = <Link className={classes.smallLink} to={props.to}>{props.children}</Link>\r\n    }\r\n    else{\r\n        link = <span className={classes.smallLink} onClick={props.click}>{props.children}</span> \r\n    }\r\n\r\n    return link;\r\n}","import {Button} from '../UI/Button/Button';\r\nimport React, {useState, useEffect} from 'react';\r\n\r\nconst Countdown = React.memo(props => {\r\n\r\n    const [timeLeft, setTimeLeft] = useState(props.time);\r\n    const [stop, setStop] = useState(false);\r\n\r\n    useEffect(() =>{\r\n\r\n        if(stop){\r\n            props.countdownEnd();\r\n        }\r\n        else if(timeLeft <= 0){\r\n            setStop(true);\r\n        }\r\n\r\n        const timer = setInterval(() => {\r\n            setTimeLeft((prevTimeLeft) => (prevTimeLeft - 1));\r\n        }, 1000);\r\n\r\n        return () => clearInterval(timer);\r\n    }, [timeLeft, stop, props]);\r\n\r\n    return (\r\n        <div>\r\n            <Button clicked={() => setStop(true)}>{props.text} ({timeLeft})</Button>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Countdown;","export const TARGETS_QUANTITY = 10;\r\nexport const DEFAULT_LEVEL = \"Beginner\";\r\nexport const CONNECTED_USER_LEVEL = \"Experienced\";\r\nexport const BEGINNER_TIME = 60;\r\nexport const INTERMEDIATE_TIME = 25;\r\nexport const EXPERIENCED_TIME = 12;\r\nexport const RANGES_STEPS = 50;\r\nexport const MIN_RANGE = 200;\r\nexport const MAX_RANGE = 700;\r\nexport const CLOSE_RANGE_LIMIT = 300;\r\nexport const MEDIUM_RANGE_LIMIT = 450;\r\nexport const READY_COUNTDOWN_TIME = 3;\r\n\r\nexport const DEFAULT_RANGE_VAL = 450;\r\nexport const END_ROUND_DELAY_TIME = 1;\r\nexport const DEFAULT_RETICLE = \"mildot\";\r\n\r\nexport const DEFAULT_ZOOM = 25;\r\nexport const MIN_ZOOM = 15;\r\nexport const MAX_ZOOM = 35;","import React from 'react';\r\nimport classes from './RangeSlider.module.css';\r\nimport * as c from '../../../../utility/constants';\r\n\r\nconst RangeSlider = (props) => {\r\n\r\n  const onChangeHandler = (event) => {\r\n    props.onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.RangeSlider}>\r\n      <h2>{props.rangeValue} m</h2>\r\n      <input type=\"range\" min={c.MIN_RANGE} max={c.MAX_RANGE} value={props.rangeValue} step={c.RANGES_STEPS} onChange={(event => onChangeHandler(event))}/>\r\n      <div className={classes.ticks}>\r\n        <span className={classes.tick}>200</span>\r\n        <span className={classes.tick}>450</span>\r\n        <span className={classes.tick}>700</span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RangeSlider;","export default __webpack_public_path__ + \"static/media/field0d.afbd0f13.jpg\";","export default __webpack_public_path__ + \"static/media/field0n.29abc759.jpg\";","export default __webpack_public_path__ + \"static/media/field0t.aaebe2a1.jpg\";","export default __webpack_public_path__ + \"static/media/field1d.26b5e6ed.jpg\";","export default __webpack_public_path__ + \"static/media/field1n.cdfe868b.jpg\";","export default __webpack_public_path__ + \"static/media/field1t.5fa73b23.jpg\";","export default __webpack_public_path__ + \"static/media/field2d.f92eb3d0.jpg\";","export default __webpack_public_path__ + \"static/media/field2n.9be367e1.jpg\";","export default __webpack_public_path__ + \"static/media/field2t.46e9c462.jpg\";","export default __webpack_public_path__ + \"static/media/mil_dot.4946f412.png\";","export default __webpack_public_path__ + \"static/media/tmr.f2de8f50.png\";","export default __webpack_public_path__ + \"static/media/tremor2.01b5314f.png\";","import React from 'react';\r\nimport classes from './ScopeVision.module.css';\r\nimport Draggable from 'react-draggable';\r\nimport * as c from '../../../../../utility/constants';\r\nimport field0d from '../../../../../media/images/field0d.jpg';\r\nimport field0n from '../../../../../media/images/field0n.jpg';\r\nimport field0t from '../../../../../media/images/field0t.jpg';\r\nimport field1d from '../../../../../media/images/field1d.jpg';\r\nimport field1n from '../../../../../media/images/field1n.jpg';\r\nimport field1t from '../../../../../media/images/field1t.jpg';\r\nimport field2d from '../../../../../media/images/field2d.jpg';\r\nimport field2n from '../../../../../media/images/field2n.jpg';\r\nimport field2t from '../../../../../media/images/field2t.jpg';\r\nimport mildot from '../../../../../media/images/reticles/mil_dot.png';\r\nimport tmr from '../../../../../media/images/reticles/tmr.png';\r\nimport tremor2 from '../../../../../media/images/reticles/tremor2.png';\r\n\r\nconst ScopeVision = props => {\r\n\r\n    const fields = {\r\n                    field0d: field0d,\r\n                    field0n: field0n,\r\n                    field0t: field0t,\r\n                    field1d: field1d,\r\n                    field1n: field1n,\r\n                    field1t: field1t,\r\n                    field2d: field2d,\r\n                    field2n: field2n,\r\n                    field2t: field2t\r\n                   }\r\n    \r\n    const ZOOM_CONSTANT = 100 / c.MIN_ZOOM;\r\n\r\n    const style = {\r\n        height: `${props.zoom * ZOOM_CONSTANT}%`,\r\n        width: `${props.zoom * ZOOM_CONSTANT}%`\r\n    };\r\n\r\n    let reticle;\r\n    switch (props.reticle){\r\n        case \"mildot\":\r\n            reticle = mildot;\r\n            break;\r\n        case \"tmr\":\r\n            reticle = tmr;\r\n            break;\r\n        case \"tremor2\":\r\n            reticle = tremor2;\r\n            break;\r\n        default:\r\n            reticle = mildot;\r\n            break;\r\n    }\r\n\r\n    // Each ranges img is prepared in the size for the upper field\r\n    // 700m for 500m-700m (field0 to field2)\r\n    // 450m for 350m-450m (field3 to field5)\r\n    // 300m for 200m-300m (field6 to field8)\r\n    let upperRange = c.MEDIUM_RANGE_LIMIT;\r\n\r\n    if(props.range > c.MEDIUM_RANGE_LIMIT)\r\n        upperRange = c.MAX_RANGE;\r\n    else if(props.range <= c.CLOSE_RANGE_LIMIT)\r\n        upperRange = c.CLOSE_RANGE_LIMIT;\r\n\r\n    const rangeFieldRatio = 100 * upperRange / props.range;\r\n\r\n    const fieldStyle = {width: `${rangeFieldRatio}%`, height: `${rangeFieldRatio}%`};\r\n    \r\n    return(\r\n        <div className={classes.ScopeVision}>\r\n            \r\n            <div className={classes.view} style={style}>\r\n                <div className={classes.field} style={fieldStyle}>\r\n                    <Draggable>\r\n                        <div>\r\n                            <img src={fields[props.field]} alt=\"feild\"/>\r\n                        </div>\r\n                    </Draggable>\r\n                </div> \r\n                <div className={classes.reticle}>\r\n                    <img src={reticle} alt=\"reticle\"></img>\r\n                </div>\r\n            </div>\r\n\r\n            <div className={classes.black}></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScopeVision;","import React from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport classes from './ZoomSlider.module.css';\r\nimport * as c from '../../../../../utility/constants';\r\n\r\nconst ZoomSlider = props => {\r\n\r\n    const isMobile = useMediaQuery({\r\n        query: '(max-width: 750px)'\r\n    });\r\n\r\n    let p = <p>×{props.zoom}</p>\r\n    if(isMobile){\r\n        p = <p style={{\"left\": `${props.zoom*3.53 - 42}%`}}>×{props.zoom}</p>\r\n    }\r\n\r\n    return(\r\n        <div className={classes.ZoomSlider}>\r\n            {p}\r\n            <input type=\"range\" min={c.MIN_ZOOM} max={c.MAX_ZOOM} value={props.zoom} onChange={event => props.onZoomChangeHandler(event.target.value)}/>\r\n            <output className=\"bubble\"></output>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ZoomSlider;","import React, {useState} from 'react';\r\nimport classes from './Scope.module.css';\r\nimport ScopeVision from './ScopeVision/ScopeVision';\r\nimport ZoomSlider from './ZoomSlider/ZoomSlider';\r\nimport * as c from '../../../../utility/constants';\r\n\r\nconst Scope = React.memo(props => {\r\n\r\n    const [zoom, setZoom] = useState(c.DEFAULT_ZOOM);\r\n    \r\n    const onZoomChangeHandler = zoom => {\r\n        setZoom(zoom);\r\n    };\r\n\r\n    const onReticleChangesHandler = event => {\r\n        props.onReticleChangesHandler(event.target.value);\r\n    };\r\n\r\n    const reticleInput = \r\n        <div className={classes.reticleInput}>\r\n            <div className={classes.singleInput}>\r\n                <input type=\"radio\"\r\n                    id=\"mildot\"\r\n                    name=\"reticle\"\r\n                    value=\"mildot\"\r\n                    checked={props.reticle === \"mildot\"}\r\n                    onChange={onReticleChangesHandler}\r\n                />\r\n                <label htmlFor=\"mildot\">Mil Dot</label>\r\n            </div>\r\n            <div className={classes.singleInput}>\r\n                <input\r\n                    type=\"radio\"\r\n                    id=\"tmr\"\r\n                    name=\"reticle\"\r\n                    value=\"tmr\"\r\n                    checked={props.reticle === \"tmr\"}\r\n                    onChange={onReticleChangesHandler}\r\n                />\r\n                <label htmlFor=\"tmr\">TMR</label>\r\n            </div>\r\n            <div className={classes.singleInput}>\r\n                <input\r\n                    type=\"radio\"\r\n                    id=\"tremor2\"\r\n                    name=\"reticle\"\r\n                    value=\"tremor2\"\r\n                    checked={props.reticle === \"tremor2\"}\r\n                    onChange={onReticleChangesHandler}\r\n                />\r\n                <label htmlFor=\"tremor2\">Tremor2</label>\r\n            </div>\r\n        </div>;\r\n\r\n    return(\r\n        <div className={classes.Scope}>\r\n            <div className={classes.sides}>\r\n                {reticleInput}\r\n            </div>\r\n            <div className={classes.ScopeVision}>\r\n                <div className={classes.mobileAdj}>\r\n                    <ScopeVision zoom={zoom} range={props.range} field={props.field} reticle={props.reticle}/>\r\n                </div>\r\n            </div>\r\n            <div className={classes.sides}>\r\n                <ZoomSlider zoom={zoom} onZoomChangeHandler={onZoomChangeHandler}/>\r\n            </div>\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default Scope;","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://range-a468d-default-rtdb.firebaseio.com/'\r\n});\r\n\r\nexport default instance;","import * as c from './constants';\r\n\r\nexport const updateObject = (oldObject, updatedProperties) => {\r\n    return{\r\n        ...oldObject,\r\n        ...updatedProperties\r\n    };\r\n};\r\n\r\nexport const calculateScore = (ranges, guesses) => {\r\n\r\n    if(ranges.length === 0 || guesses.length === 0)\r\n        return \"None\";\r\n\r\n    const allRangesQuantity = (c.MAX_RANGE - c.MIN_RANGE) / c.RANGES_STEPS + 1;\r\n    const length = guesses.length;\r\n    let score = 0;\r\n\r\n    for(let i = 0; i < length; i++){\r\n        let gap = Math.abs(guesses[i] / c.RANGES_STEPS - ranges[i] / c.RANGES_STEPS);\r\n        score += gap / length;\r\n    }\r\n\r\n    score = Math.round((1 - score/allRangesQuantity) * 100);\r\n\r\n    return score;\r\n};\r\n\r\nexport const filterRangesByVision = (ranges, fields, vision) => {\r\n    let finalRanges = [];\r\n    for(let i=0; i<ranges.length; i++){\r\n        if(fields[i].substring(fields[i].length - 1) === vision)\r\n            finalRanges.push(ranges[i]);\r\n    }\r\n    return finalRanges;\r\n}\r\n\r\nexport const creatingRandomRangesArray = () => {\r\n    const ranges = [];\r\n    const allRangesQuantity = (c.MAX_RANGE - c.MIN_RANGE) / c.RANGES_STEPS + 1;\r\n    for(let i = 0; i < c.TARGETS_QUANTITY; i++){\r\n        ranges.push(Math.floor(Math.random() * allRangesQuantity) * c.RANGES_STEPS + c.MIN_RANGE);\r\n    }\r\n    return ranges;\r\n}\r\n\r\n// \r\nexport const creatingRandomFieldsArray = ranges => {\r\n    const fields = [];\r\n    const visionArray = ['d', 'n', 't']; // day, night, thermal\r\n    let vision;\r\n\r\n    for(let i = 0; i < c.TARGETS_QUANTITY; i++){\r\n        vision = visionArray[Math.floor(Math.random() * visionArray.length)];\r\n\r\n        if(ranges[i] > c.MEDIUM_RANGE_LIMIT)\r\n            fields.push(`field2${vision}`);\r\n        else if(ranges[i] <= c.CLOSE_RANGE_LIMIT)\r\n            fields.push(`field0${vision}`);\r\n        else\r\n            fields.push(`field1${vision}`);\r\n    }\r\n    return fields;\r\n}","import { useMediaQuery } from 'react-responsive';\r\nimport classes from './TestTable.module.css';\r\n\r\nconst TestTable = props => {\r\n\r\n    const renderHeader = (start, end) => {\r\n        const headerContent = [\"Round\"];\r\n        for(let i=start; i < end; i++){\r\n            headerContent.push(i+1);\r\n        }\r\n\r\n        return (\r\n            headerContent.map((key, index) => {\r\n                return <th key={index}>{key}</th>\r\n            })\r\n        );\r\n    };\r\n\r\n    const renderRanges = (start, end) => {\r\n        const rangesContent = [\"Range\"];\r\n        for(let i=start; i < end; i++){\r\n            rangesContent.push(props.ranges[i]);\r\n        }\r\n\r\n        return(\r\n            rangesContent.map((key, index) => {\r\n                return <td key={index}>{key}</td>\r\n            })\r\n        );\r\n    };\r\n\r\n    const renderVisions = (start, end) => {\r\n        const visionsContent = [\"Vision\"];\r\n        for(let i=start; i < end; i++){\r\n            const visionType =  props.vision[i].substring(props.vision[i].length - 1);\r\n            switch (visionType){\r\n                case \"d\":\r\n                    visionsContent.push(\"Day\");\r\n                    break;\r\n                case \"n\":\r\n                    visionsContent.push(\"Night\");\r\n                    break;\r\n                case \"t\":\r\n                    visionsContent.push(\"Thermal\");\r\n                    break;\r\n                default:\r\n                    visionsContent.push(\"None\");\r\n            }\r\n        }\r\n\r\n        return(\r\n            visionsContent.map((key, index) => {\r\n                return <td key={index}>{key}</td>\r\n            })\r\n        );\r\n    };\r\n\r\n    const renderGuessed = (start, end) => {\r\n        const guessedContent = [\"Guessed Range\"];\r\n        for(let i=start; i < end; i++){\r\n            guessedContent.push(props.guessedRanges[i]);\r\n        }\r\n\r\n        return (\r\n            guessedContent.map((key, index) => {\r\n                if(index > 0){\r\n                    const diff = Math.abs(props.ranges[start + index-1] - props.guessedRanges[start + index-1]);\r\n                    switch (true){\r\n                        case diff === 0:\r\n                            return <td key={index} className={classes.good}>{key}</td>\r\n                        case diff === 50:\r\n                            return <td key={index} className={classes.medium}>{key}</td>\r\n                        case diff > 50:\r\n                            return <td key={index} className={classes.bad}>{key}</td>\r\n                        default:\r\n                            return <td key={index}>{key}</td>\r\n                    }\r\n                }\r\n\r\n                else\r\n                    return <td key={index} >{key}</td>\r\n            })\r\n        );\r\n    };\r\n\r\n    const isMobile = useMediaQuery({\r\n        query: '(max-width: 750px)'\r\n    });\r\n\r\n    let content = null;\r\n\r\n    if(isMobile){\r\n        content = (\r\n            <table id='Test' className={classes.Table}>\r\n                <thead>\r\n                    <tr>{renderHeader(0, 5)}</tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr key=\"ranges\">{renderRanges(0, 5)}</tr>\r\n                    <tr key=\"visions\">{renderVisions(0, 5)}</tr>\r\n                    <tr key=\"guessed\">{renderGuessed(0, 5)}</tr>\r\n                    <tr>{renderHeader(5, props.ranges.length)}</tr>\r\n                    <tr key=\"ranges2\">{renderRanges(5, props.ranges.length)}</tr>\r\n                    <tr key=\"visions2\">{renderVisions(5, props.ranges.length)}</tr>\r\n                    <tr key=\"guessed2\">{renderGuessed(5, props.ranges.length)}</tr>\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n    else{\r\n        content = (\r\n            <table id='Test' className={classes.Table}>\r\n                <thead>\r\n                    <tr>{renderHeader(0, props.ranges.length)}</tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr key=\"ranges\">{renderRanges(0, props.ranges.length)}</tr>\r\n                    <tr key=\"visions\">{renderVisions(0, props.ranges.length)}</tr>\r\n                    <tr key=\"guessed\">{renderGuessed(0, props.ranges.length)}</tr>\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n\r\n    return content;\r\n}\r\n\r\nexport default TestTable;","import {calculateScore, filterRangesByVision} from '../../utility/utility';\r\nimport TestTable from '../TestTable/TestTable';\r\n\r\n\r\nconst TestStats = props => {\r\n\r\n        const finalScore = calculateScore(props.ranges, props.guessedRanges);\r\n\r\n        const dayScore = calculateScore(\r\n                filterRangesByVision(props.ranges, props.fields, \"d\"), \r\n                filterRangesByVision(props.guessedRanges, props.fields, \"d\"),\r\n        );\r\n\r\n        const nightScore = calculateScore(\r\n                filterRangesByVision(props.ranges, props.fields, \"n\"), \r\n                filterRangesByVision(props.guessedRanges, props.fields, \"n\"),\r\n        );\r\n\r\n        const thermalScore = calculateScore(\r\n                filterRangesByVision(props.ranges, props.fields, \"t\"), \r\n                filterRangesByVision(props.guessedRanges, props.fields, \"t\"),\r\n        );\r\n\r\n        return(\r\n                <div>\r\n                        <h2>Your Score Is:</h2>\r\n                        <h2>{finalScore}/100</h2>\r\n                        <div>\r\n                                <p>Day Score: {dayScore}%</p>\r\n                                <p>Night Score: {nightScore}%</p>\r\n                                <p>Thermal Score: {thermalScore}%</p>\r\n                        </div>\r\n                        <TestTable ranges={props.ranges} vision={props.fields} guessedRanges={props.guessedRanges}/>\r\n                </div>\r\n        );\r\n}\r\n\r\nexport default TestStats;","import React from 'react';\r\n\r\nconst authContext = React.createContext({\r\n    state: null,\r\n    setState: null\r\n});\r\n\r\nexport default authContext;\r\n","import React from 'react';\r\nimport classes from './Spinner.module.css';\r\n\r\nconst spinner = () => (\r\n    <div className={classes.loader}/>\r\n);\r\n\r\nexport default spinner;","import React, { useState, useContext, useEffect} from 'react';\r\nimport axios from '../../../../utility/axios';\r\nimport {ButtonLink} from '../../../../components/UI/Button/Button';\r\nimport TestStats from '../../../../components/TestStats/TestStats';\r\nimport AuthContext from '../../../../authContext/authContext';\r\nimport Spinner from '../../../../components/UI/Spinner/Spinner';\r\n\r\nconst TestEnd = props => {\r\n\r\n    const authContext = useContext(AuthContext);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    \r\n    let content = <Spinner/>;\r\n    \r\n    useEffect(() => {\r\n        if(authContext.state.token){\r\n            const date = new Date();\r\n            const dateString = date.toDateString().substring(4) + ' ' + date.toTimeString().substring(0, 8);\r\n            const testData = {\r\n                email: authContext.state.email,\r\n                date: dateString, \r\n                ranges: props.ranges,\r\n                guessedRanges: props.guessedRanges,\r\n                fields: props.fields\r\n            };\r\n            axios.post('/tests.json?auth=' + authContext.state.token, testData)\r\n            .then(() => {\r\n                setIsLoading(false);\r\n            })\r\n            .catch(() => {\r\n                setError(<p style={{color: \"red\"}}>Error, test not saved.</p>);\r\n                setIsLoading(false);\r\n            });\r\n        }\r\n        else{\r\n            setIsLoading(false);\r\n        }\r\n    }, [authContext.state.token, authContext.state.email, props.fields, props.guessedRanges, props.ranges]);\r\n\r\n    if(!isLoading){\r\n        content = (\r\n            <React.Fragment>\r\n                <TestStats ranges={props.ranges} guessedRanges={props.guessedRanges} fields={props.fields}/>\r\n                {error}\r\n                <br/>\r\n                <ButtonLink action={props.resetTest}>Again</ButtonLink>\r\n                <br/>\r\n                <ButtonLink to='/'>Home</ButtonLink>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n    \r\n    return content;\r\n}\r\n\r\nexport default TestEnd;","import React, {useState, useCallback, useRef} from 'react';\r\nimport classes from './TargetSwitcher.module.css';\r\nimport RangeSlider from './RangeSlider/RangeSlider';\r\nimport Countdown from '../../../components/Countdown/Countdown';\r\nimport Scope from './Scope/Scope';\r\nimport * as c from '../../../utility/constants';\r\nimport TestEnd from './TestEnd/TestEnd';\r\n\r\nconst TargetSwitcher = props => {\r\n\r\n    const guessedRanges = useRef([]);\r\n\r\n    const [round, setRound] = useState(0);\r\n    const [estimatedRange, setEstimatedRange] = useState(c.DEFAULT_RANGE_VAL);\r\n    const [endEstimate, setEndEstimate] = useState(false);\r\n    const [reticle, setReticle] = useState(c.DEFAULT_RETICLE);\r\n\r\n    const onReticleChangesHandler = reticle => {\r\n        setReticle(reticle);\r\n    };\r\n\r\n    const endCountdownHandler = useCallback(() => {\r\n        setEndEstimate(true)\r\n    }, []);\r\n\r\n    const endRoundHandler = () => {\r\n        guessedRanges.current.push(estimatedRange);\r\n        setRound((prevRound) => (prevRound + 1));\r\n        setEndEstimate(false);\r\n        setEstimatedRange(c.DEFAULT_RANGE_VAL);\r\n    };\r\n\r\n    let content = endEstimate \r\n        ?\r\n        <React.Fragment>\r\n            <div className={classes.round}>Round {round+1}/{props.ranges.length}</div>\r\n            <h2 className={classes.realRange}>{props.ranges[round]} m</h2>\r\n            <div className={classes.endDelay}><Countdown time={c.END_ROUND_DELAY_TIME} countdownEnd={endRoundHandler} text=\"\"/></div>\r\n        </React.Fragment>\r\n        :\r\n        <React.Fragment>\r\n            <div className={classes.round}>Round {round+1}/{props.ranges.length}</div>\r\n            <Scope range={props.ranges[round]} field={props.fields[round]} reticle={reticle} onReticleChangesHandler={onReticleChangesHandler}/>\r\n            <RangeSlider rangeValue={estimatedRange} onChange={range => setEstimatedRange(range)}/>\r\n            <Countdown time={props.countdownTime} countdownEnd={endCountdownHandler} text=\"continue\"/>\r\n        </React.Fragment>;\r\n\r\n    if(round === props.ranges.length){\r\n        content = <TestEnd \r\n                    ranges={props.ranges}\r\n                    guessedRanges={guessedRanges.current}\r\n                    fields={props.fields}\r\n                    resetTest={props.resetTest}\r\n                  />;\r\n    }\r\n\r\n    return(\r\n        <div className={classes.TargetSwitcher}>\r\n            {content}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TargetSwitcher;","import React, {useState, useContext} from 'react';\r\nimport Countdown from '../../components/Countdown/Countdown';\r\nimport {Button, ButtonLink} from '../../components/UI/Button/Button';\r\nimport TargetSwitcher from './TargetSwitcher/TargetSwitcher';\r\nimport classes from './RangeTest.module.css';\r\nimport AuthContext from '../../authContext/authContext';\r\nimport {creatingRandomRangesArray, creatingRandomFieldsArray} from '../../utility/utility';\r\nimport * as c from '../../utility/constants';\r\n\r\nconst RangeTest = props => {\r\n\r\n    const authContext = useContext(AuthContext);\r\n\r\n    let defaultLevel;\r\n    if(authContext.state.token)\r\n        defaultLevel = c.CONNECTED_USER_LEVEL;\r\n    else\r\n        defaultLevel = c.DEFAULT_LEVEL;\r\n\r\n    const [isReady, setIsReady] = useState(false);\r\n    const [isCountDown, setIsCountdown] = useState(true);\r\n    const [level, setLevel] = useState(defaultLevel);\r\n\r\n    const resetTest = () => {\r\n        setIsReady(false);\r\n        setIsCountdown(true);\r\n        setLevel(defaultLevel);\r\n        console.log('[RangeTest.js] resetTest');\r\n    }\r\n\r\n    let content = (\r\n        <div>\r\n            <h3>Ready?</h3>\r\n            {authContext.state.token\r\n            ?   null\r\n            :   <div className={classes.levels}>\r\n                    <input type=\"radio\"\r\n                        id=\"Beginner\"\r\n                        name=\"level\"\r\n                        value=\"Beginner\"\r\n                        checked={level === \"Beginner\"}\r\n                        onChange={event => setLevel(event.target.value)}\r\n                    />\r\n                    <label htmlFor=\"Beginner\">Beginner ({c.BEGINNER_TIME} sec)</label>\r\n                    <br/>\r\n                    <input type=\"radio\"\r\n                        id=\"Intermediate\"\r\n                        name=\"level\"\r\n                        value=\"Intermediate\"\r\n                        checked={level === \"Intermediate\"}\r\n                        onChange={event => setLevel(event.target.value)}\r\n                    />\r\n                    <label htmlFor=\"Intermediate\">Intermediate ({c.INTERMEDIATE_TIME} sec)</label>\r\n                    <br/>\r\n                    <input type=\"radio\"\r\n                        id=\"Experienced\"\r\n                        name=\"level\"\r\n                        value=\"Experienced\"\r\n                        checked={level === \"Experienced\"}\r\n                        onChange={event => setLevel(event.target.value)}\r\n                    />\r\n                    <label htmlFor=\"Experienced\">Experienced ({c.EXPERIENCED_TIME} sec)</label>\r\n                </div>\r\n            }\r\n            <Button clicked={() => setIsReady(true)}>START</Button>\r\n            <br/>\r\n            <ButtonLink to='/'>Back</ButtonLink>\r\n        </div>\r\n    );\r\n\r\n    if(isReady){\r\n        content = \r\n            <div>\r\n                <br/>\r\n                <Countdown time={c.READY_COUNTDOWN_TIME} countdownEnd={() => setIsCountdown(false)} text=\"skip\"/>\r\n            </div>\r\n    }\r\n\r\n    if (!isCountDown) {\r\n\r\n        let ranges = creatingRandomRangesArray();\r\n\r\n        let fields = creatingRandomFieldsArray(ranges);\r\n\r\n        let countdownTime;\r\n        switch(level){\r\n            case 'Beginner':\r\n                countdownTime = c.BEGINNER_TIME;\r\n                break;\r\n            case 'Intermediate':\r\n                countdownTime = c.INTERMEDIATE_TIME;\r\n                break;\r\n            case 'Experienced':\r\n                countdownTime = c.EXPERIENCED_TIME;\r\n                break;\r\n            default:\r\n                countdownTime = c.BEGINNER_TIME;\r\n                break;\r\n        }\r\n\r\n        content = (\r\n            <div>\r\n                <TargetSwitcher ranges={ranges} fields={fields} countdownTime={countdownTime} resetTest={resetTest}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return (content);\r\n}\r\n\r\nexport default RangeTest;","import classes from './Input.module.css';\r\n\r\nconst input = props => {\r\n\r\n    const inputClasses = [classes.InputElement];\r\n\r\n    return(\r\n        <div className={classes.Input}>\r\n            <label className={classes.label}>{props.label}</label>\r\n            <input\r\n                className={inputClasses.join(' ')}\r\n                value={props.value}\r\n                onChange={props.inputOnChangeHandler}\r\n                type={props.type}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default input;","import React from 'react';\r\nimport Input from '../UI/Input/Input';\r\nimport {Button} from '../UI/Button/Button';\r\n\r\nconst Form = props => {\r\n    return (\r\n        <div>\r\n            <Input label=\"Email:\" value={props.email.value} type='email' inputOnChangeHandler={event => props.email.set(event.target.value)}/>\r\n            <Input label=\"Password:\" value={props.password.value} type='password' inputOnChangeHandler={event => props.password.set(event.target.value)}/>\r\n            <Button clicked={props.clickHandler}>{props.button}</Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Form;","import React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport Form from '../../components/Form/Form';\r\nimport {ButtonSmallLink} from '../../components/UI/Button/Button';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\n\r\nconst Signup = props => {\r\n\r\n    const [enteredEmail, setEnteredEmail] = useState('');\r\n    const [enteredPassword, setEnteredPassword] = useState('');\r\n    const [isComplete, setIsComplete] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n\r\n    const signupHandler = () => {\r\n        \r\n        const authData = {\r\n            email: enteredEmail,\r\n            password: enteredPassword,\r\n            returnSecureToken: true\r\n        };\r\n\r\n        setIsLoading(true);\r\n\r\n        axios.post(\"https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyChucJCCyDp-gPlxRVay3ScQAcVW8qxuak\", authData)\r\n        .then(response => {\r\n            setIsLoading(false);\r\n            setIsComplete(true);\r\n        })\r\n        .catch(error => {\r\n            setIsLoading(false);\r\n            setIsError(true);\r\n        });\r\n    };\r\n\r\n    let content = (\r\n        <React.Fragment>\r\n            <p>Please enter your info</p>\r\n            <Form\r\n                button=\"Sign up\"\r\n                clickHandler={signupHandler}\r\n                email={{value: enteredEmail, set: setEnteredEmail}}\r\n                password={{value: enteredPassword, set: setEnteredPassword}}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n\r\n    if(isLoading){\r\n        content = <Spinner/>;\r\n    }\r\n    \r\n    if(isComplete){\r\n        content =  <p>Sign up Completed</p>;\r\n    }\r\n    \r\n    if(isError){\r\n        content = <p style={{color: \"red\"}}>An error has occurred. Please try again later.</p>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {content}\r\n            <ButtonSmallLink to='/'>Back to home page</ButtonSmallLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Signup;","import React, {useState, useContext} from 'react';\r\nimport Form from'../../components/Form/Form';\r\nimport axios from 'axios';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport AuthContext from '../../authContext/authContext';\r\n\r\nconst Login = () => {\r\n\r\n    const [enteredEmail, setEnteredEmail] = useState('');\r\n    const [enteredPassword, setEnteredPassword] = useState('');\r\n    const [isComplete, setIsComplete] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [isError, setIsError] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"An error has occurred. Please try again later.\");\r\n\r\n    const authContext = useContext(AuthContext);\r\n\r\n    if(authContext.state.token === null && isComplete)\r\n        setIsComplete(false);\r\n\r\n    if(authContext.state.token && !isComplete)\r\n        setIsComplete(true);\r\n\r\n    const loginHandler = () => {\r\n        \r\n        const authData = {\r\n            email: enteredEmail,\r\n            password: enteredPassword,\r\n            returnSecureToken: true\r\n        };\r\n\r\n        setIsLoading(true);\r\n\r\n        axios.post(\"https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyChucJCCyDp-gPlxRVay3ScQAcVW8qxuak\", authData)\r\n        .then(response => {\r\n            const expirationDate = new Date(new Date().getTime() + response.data.expiresIn * 1000);\r\n            localStorage.setItem('token', response.data.idToken);\r\n            localStorage.setItem('expirationDate', expirationDate);\r\n            localStorage.setItem('userId', response.data.localId);\r\n            localStorage.setItem('email', response.data.email);\r\n            authContext.setState({\r\n                token: response.data.idToken,\r\n                userId: response.data.localId,\r\n                email: response.data.email\r\n            });\r\n            setIsLoading(false);\r\n            setIsError(false);\r\n            setIsComplete(true);\r\n        })\r\n        .catch(error => {\r\n            const message = error.response.data.error.message;\r\n            if(message === \"INVALID_EMAIL\")\r\n                setErrorMessage(\"Invalid email.\");\r\n            else if(message === \"INVALID_PASSWORD\" || message === \"EMAIL_NOT_FOUND\")\r\n                setErrorMessage(\"Incorrect email or password.\");\r\n            setIsLoading(false);\r\n            setIsError(true);\r\n        });\r\n    };\r\n\r\n    let content = (\r\n        <React.Fragment>\r\n            <Form\r\n                button=\"Log in\"\r\n                clickHandler={loginHandler}\r\n                email={{value: enteredEmail, set: setEnteredEmail}}\r\n                password={{value: enteredPassword, set: setEnteredPassword}}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n\r\n    if(isLoading){\r\n        content = <Spinner/>;\r\n    }\r\n    \r\n    if(isComplete){\r\n        content = <p>Hello {authContext.state.email}</p>;\r\n    }\r\n    \r\n    if(isError){\r\n        content = (\r\n            <React.Fragment>\r\n                <Form\r\n                    button=\"Log in\"\r\n                    clickHandler={loginHandler}\r\n                    email={{value: enteredEmail, set: setEnteredEmail}}\r\n                    password={{value: enteredPassword, set: setEnteredPassword}}\r\n                />\r\n                <p style={{color: \"red\"}}>{errorMessage}</p>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {content}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Login;","import React, {useContext} from 'react';\r\nimport AuthContext from '../../authContext/authContext';\r\nimport classes from './Home.module.css';\r\nimport Login from '../../containers/Login/Login';\r\nimport {ButtonLink, ButtonSmallLink} from '../UI/Button/Button';\r\n\r\nconst Home = props => {\r\n\r\n    const authContext = useContext(AuthContext);\r\n\r\n    const content = (\r\n        <main>\r\n            <header>\r\n                <h1>SNIPER RANGE TEST</h1>\r\n                <p className={classes.homeText}>Estimate the range of a targets with your reticle only.</p>\r\n                {authContext.state.token\r\n                ? null\r\n                : <React.Fragment>\r\n                    <p className={classes.guestText}>\r\n                        Use as guest, sign up or use the demo user:\r\n                    </p>\r\n                    <p className={classes.mailPassText}>\r\n                        Email: asd@asd.com<br/>\r\n                        Password: asdasdasd\r\n                    </p>\r\n                  </React.Fragment>\r\n                  \r\n                }\r\n            </header>\r\n            <Login/>\r\n            {authContext.state.token \r\n            ? <ButtonSmallLink click={props.logout}>logout</ButtonSmallLink>\r\n            : <ButtonSmallLink to='/signup'>Sign up</ButtonSmallLink>\r\n            }\r\n            <br/>\r\n            <div className={classes.Menu}>\r\n                {authContext.state.token\r\n                ? <React.Fragment>\r\n                    <ButtonLink to='/rangetest'>Start Test</ButtonLink>\r\n                    <br/>\r\n                    <ButtonLink to='/stats'>Statistics</ButtonLink>\r\n                  </React.Fragment>\r\n                : <ButtonLink to='/rangetest'>Guest Demo</ButtonLink>\r\n                }\r\n            </div>\r\n        </main>\r\n    );\r\n\r\n    return content;\r\n}\r\n\r\nexport default Home;","import React, {useState} from 'react';\r\nimport TestTable from '../../../components/TestTable/TestTable';\r\nimport classes from './TestBlock.module.css';\r\nimport {calculateScore} from '../../../utility/utility';\r\n\r\nconst TestBlock = props => {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggleIsOpenHandler = () => {\r\n        setIsOpen(prevIsOpen => !prevIsOpen);\r\n    }\r\n\r\n    const finalScore = calculateScore(props.ranges, props.guessedRanges) ;\r\n    const tr = <React.Fragment>\r\n                    {props.date}<span className={classes.score}>{finalScore}/100</span>\r\n               </React.Fragment>\r\n    return(\r\n        <React.Fragment>\r\n            <div>\r\n                <table id={props.date} className={classes.TableTop} onClick={toggleIsOpenHandler}>\r\n                    <thead>\r\n                        <tr>\r\n                            <td>\r\n                                {props.date}<span className={classes.score}>{finalScore}/100</span>\r\n                            </td>\r\n                        </tr> \r\n                    </thead>\r\n                </table>\r\n            </div>\r\n                {isOpen\r\n                    ? <TestTable ranges={props.ranges} vision={props.fields} guessedRanges={props.guessedRanges}/>\r\n                    : null\r\n                }    \r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default TestBlock;\r\n","import React, {useState, useContext, useEffect} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport AuthContext from '../../authContext/authContext';\r\nimport {ButtonLink} from '../../components/UI/Button/Button';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport axios from '../../utility/axios';\r\nimport TestBlock from './TestBlock/TestBlock';\r\nimport {calculateScore, filterRangesByVision} from '../../utility/utility';\r\n\r\nconst Stats = () => {\r\n\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isError, setIsError] = useState(false);\r\n    const [tests, setTests] = useState(null);\r\n    const [avgScore, setAvgScore] = useState(null);\r\n    const [visionsScore, setVisionsScore] = useState(null);\r\n    const authContext = useContext(AuthContext);\r\n\r\n    let content = <Redirect to=\"/\"/>;\r\n\r\n    useEffect(() => {\r\n\r\n        if(authContext.state.token){\r\n            // const queryParams = '?auth=' + token + '&orderBy=\"userId\"&equalTo=\"' + userId + '\"';\r\n            const queryParams = '?auth=' + authContext.state.token + '&orderBy=\"email\"&equalTo=\"' + authContext.state.email + '\"';\r\n            axios.get('/tests.json' + queryParams)\r\n            .then(res => {\r\n                const testsArray = [];\r\n                let day = {ranges: [], guesses: []};\r\n                let night = {ranges: [], guesses: []};\r\n                let thermal = {ranges: [], guesses: []};\r\n                let sum = 0;\r\n                for(let key in res.data){\r\n                    testsArray.push({\r\n                        date: res.data[key].date,\r\n                        ranges: res.data[key].ranges,\r\n                        fields: res.data[key].fields,\r\n                        guessedRanges: res.data[key].guessedRanges\r\n                    });\r\n                    sum += calculateScore(res.data[key].ranges, res.data[key].guessedRanges);\r\n\r\n                    day.ranges = [...day.ranges, ...filterRangesByVision(res.data[key].ranges, res.data[key].fields, \"d\")];\r\n                    night.ranges = [...night.ranges, ...filterRangesByVision(res.data[key].ranges, res.data[key].fields, \"n\")];\r\n                    thermal.ranges = [...day.ranges, ...filterRangesByVision(res.data[key].ranges, res.data[key].fields, \"t\")];\r\n\r\n                    day.guesses = [...day.guesses, ...filterRangesByVision(res.data[key].guessedRanges, res.data[key].fields, \"d\")];\r\n                    night.guesses = [...night.guesses, ...filterRangesByVision(res.data[key].guessedRanges, res.data[key].fields, \"n\")];\r\n                    thermal.guesses = [...day.guesses, ...filterRangesByVision(res.data[key].guessedRanges, res.data[key].fields, \"t\")];\r\n                }\r\n\r\n                testsArray.reverse();\r\n                setVisionsScore({\r\n                    day: calculateScore(day.ranges, day.guesses),\r\n                    night: calculateScore(night.ranges, night.guesses),\r\n                    thermal: calculateScore(thermal.ranges, thermal.guesses)\r\n                });\r\n                setAvgScore(sum/testsArray.length)\r\n                setTests(testsArray);\r\n                setIsLoading(false);\r\n\r\n            })\r\n            .catch(err => {\r\n                setIsError(true);\r\n                setIsLoading(false);\r\n            });\r\n        }\r\n\r\n    },[authContext.state]);\r\n\r\n    if(authContext.state.token){\r\n        if(isLoading){\r\n            content = <Spinner/>;\r\n        }\r\n        else if(isError)\r\n            content = <p>An error has occured</p>;\r\n        else{\r\n\r\n            const testsTables = tests.map(test => {\r\n                return <TestBlock key={test.date} date={test.date} ranges={test.ranges} fields={test.fields} guessedRanges={test.guessedRanges}/>\r\n            });\r\n\r\n            content = (\r\n                <React.Fragment>\r\n                    <h2>Average Score: {avgScore}/100</h2>\r\n                    <br/>\r\n                    Day Accuracy: {visionsScore.day}%\r\n                    <br/>\r\n                    Night Accuracy: {visionsScore.night}%\r\n                    <br/>\r\n                    Thermal Accuracy: {visionsScore.thermal}%\r\n                    <br/>\r\n                    <br/>\r\n                    {testsTables}\r\n                    <br/>\r\n                    <ButtonLink to='/'>Back</ButtonLink>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n    return content;\r\n};\r\n\r\nexport default Stats;","import React, {useState} from 'react';\nimport classes from './App.module.css';\nimport {HashRouter, BrowserRouter, Route, Switch, Redirect} from 'react-router-dom';\nimport RangeTest from './containers/RangeTest/RangeTest';\nimport Signup from './containers/Signup/Signup';\nimport AuthContext from './authContext/authContext';\nimport Home from './components/Home/Home';\nimport stats from './containers/Stats/Stats';\n\nconst App = () => {\n\n  const [authState, setAuthState] = useState({\n    token: localStorage.getItem('token'),\n    userId: localStorage.getItem('userId'),\n    email: localStorage.getItem('email')\n  });\n\n  //////////////// is userId unnecessary?\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expirationDate');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('email');\n    setAuthState({\n        token: null,\n        userId: null,\n        email: null\n    });\n  }\n\n  const expirationDate = new Date (localStorage.getItem('expirationDate'));\n\n  if(authState.token && expirationDate <= new Date()){\n    logout();\n  }\n\n  const home = <Home logout={logout}/>;\n\n  let routes = (\n    <Switch>\n      <Route path='/rangetest' exact component={RangeTest}/>\n      <Route path='/signup' exact component={Signup}/>\n      <Route path='/stats' exact component={stats}/>\n      <Route path='/' exact render={() => home}/>\n      <Redirect to='/'/>\n    </Switch>\n  );\n\n  return (\n    <HashRouter>\n      <AuthContext.Provider value={{state: authState, setState: setAuthState}}>\n        <div className={classes.App}>\n          {routes}\n        </div>\n      </AuthContext.Provider>\n    </HashRouter>\n  );\n\n};\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}